{"ast":null,"code":"import { prime } from 'bigint-crypto-utils';\n\n// Генерация большого простого числа (асинхронная функция)\nexport async function generateLargePrime(bits = 512) {\n  const largePrime = await prime(bits);\n  return largePrime;\n}\nexport async function findPrimitiveRoot(p) {\n  // Вычисление примитивного корня по модулю p\n  const g = await primitiveRoot(p);\n  return g;\n}","map":{"version":3,"names":["prime","generateLargePrime","bits","largePrime","findPrimitiveRoot","p","g","primitiveRoot"],"sources":["D:/учеба/3 курс/1 семестр/ИнфоБез/pracitce_3/practice_3_ui/src/generatingNumberTools.js"],"sourcesContent":["\r\nimport { prime } from 'bigint-crypto-utils';\r\n\r\n\r\n// Генерация большого простого числа (асинхронная функция)\r\nexport async function generateLargePrime(bits = 512) {\r\n  const largePrime = await prime(bits);\r\n  return largePrime;\r\n}\r\n\r\nexport async function findPrimitiveRoot(p) {\r\n    // Вычисление примитивного корня по модулю p\r\n  const g = await primitiveRoot(p);\r\n  return g;\r\n}"],"mappings":"AACA,SAASA,KAAK,QAAQ,qBAAqB;;AAG3C;AACA,OAAO,eAAeC,kBAAkBA,CAACC,IAAI,GAAG,GAAG,EAAE;EACnD,MAAMC,UAAU,GAAG,MAAMH,KAAK,CAACE,IAAI,CAAC;EACpC,OAAOC,UAAU;AACnB;AAEA,OAAO,eAAeC,iBAAiBA,CAACC,CAAC,EAAE;EACvC;EACF,MAAMC,CAAC,GAAG,MAAMC,aAAa,CAACF,CAAC,CAAC;EAChC,OAAOC,CAAC;AACV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}