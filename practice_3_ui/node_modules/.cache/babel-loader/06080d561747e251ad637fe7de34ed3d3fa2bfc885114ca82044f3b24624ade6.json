{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0443\\u0447\\u0435\\u0431\\u0430\\\\3 \\u043A\\u0443\\u0440\\u0441\\\\1 \\u0441\\u0435\\u043C\\u0435\\u0441\\u0442\\u0440\\\\\\u0418\\u043D\\u0444\\u043E\\u0411\\u0435\\u0437\\\\pracitce_3\\\\practice_3_ui\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n/* global BigInt */\n\nimport React, { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport { decryptMessage, encryptMessage } from \"./cryptoTools\";\nimport { generateRandomNumber, calculateNumberB, calculateNumberS, deriveKey, deriveKeyPythonCompatible } from \"./numberTools\";\nimport { getKeys, sendKeyB, getMessage, compareKeys, sendMessage } from \"./requests/requestExchangeKey\";\nimport { Registration } from \"./components/Registration/Registration\";\nimport { MainWindow } from \"./components/MainWindow/MainWindow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [b, setb] = useState(generateRandomNumber());\n  const [B, setB] = useState(null);\n  const [S, setS] = useState(null);\n  const [derivedKey, setDerivedKey] = useState(undefined);\n  const [decryptedMessage, setDecryptedMessage] = useState(null);\n\n  // Получение ключей от сервера при монтировании компонента\n  useEffect(() => {\n    const fetchData = async () => {\n      console.log(`сгенерированное число b: ${b}`);\n      const keys = await getKeys(); // Получение данных с сервера\n      console.log(`Полученное число A: ${keys.key_A}`);\n      const B_loc = calculateNumberB(keys.key_g, b, keys.key_p);\n      setB(B_loc);\n      console.log(`Число B: ${B_loc}`);\n      sendKeyB(B_loc);\n      const S_local = calculateNumberS(keys.key_A, b, keys.key_p);\n      setS(S_local);\n      console.log(`S: ${S_local}`);\n      function uint8ArrayToHex(uint8Array) {\n        return Array.from(uint8Array).map(byte => byte.toString(16).padStart(2, '0')) // Преобразуем каждый байт в шестнадцатеричное значение\n        .join(''); // Соединяем их в строку\n      }\n      const derivedKey = await deriveKey(S_local); // Генерация ключа\n      setDerivedKey(derivedKey);\n      console.log(`derivedKey: ${uint8ArrayToHex(derivedKey)}`);\n      await compareKeys(derivedKey);\n      const data = await getMessage();\n      console.log(`iv: ${data.iv}`);\n      console.log(`iv: ${typeof data.iv}`);\n      console.log(`encrypted_message: ${data.encrypted_message}`);\n      console.log(`encrypted_message: ${typeof data.encrypted_message}`);\n      const decryptedMessage = decryptMessage(data.iv, data.encrypted_message, derivedKey);\n      console.log(decryptedMessage);\n      const dataForChipher = {\n        'one': 'hello',\n        'two': [32, 28]\n      };\n      const dataIvAndMessage = encryptMessage(derivedKey, dataForChipher);\n      console.log(`iv: ${dataIvAndMessage.iv}`);\n      console.log(`mes: ${dataIvAndMessage.encryptedMessage}`);\n      sendMessage(dataIvAndMessage.iv, dataIvAndMessage.encryptedMessage);\n    };\n    fetchData();\n  }, []);\n  return (\n    /*#__PURE__*/\n    // <Registration sharedKey={derivedKey}></Registration>\n    // <MainWindow sharedKey={derivedKey}></MainWindow>\n    _jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Registration, {\n            sharedKey: derivedKey\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/working\",\n          element: /*#__PURE__*/_jsxDEV(MainWindow, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(App, \"9/JgS5AhCkCkfO8pMo6RpXqVc4g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","BrowserRouter","Router","Routes","Route","decryptMessage","encryptMessage","generateRandomNumber","calculateNumberB","calculateNumberS","deriveKey","deriveKeyPythonCompatible","getKeys","sendKeyB","getMessage","compareKeys","sendMessage","Registration","MainWindow","jsxDEV","_jsxDEV","App","_s","b","setb","B","setB","S","setS","derivedKey","setDerivedKey","undefined","decryptedMessage","setDecryptedMessage","fetchData","console","log","keys","key_A","B_loc","key_g","key_p","S_local","uint8ArrayToHex","uint8Array","Array","from","map","byte","toString","padStart","join","data","iv","encrypted_message","dataForChipher","dataIvAndMessage","encryptedMessage","children","path","element","sharedKey","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/учеба/3 курс/1 семестр/ИнфоБез/pracitce_3/practice_3_ui/src/App.js"],"sourcesContent":["/* global BigInt */\n\nimport React, { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport { decryptMessage, encryptMessage } from \"./cryptoTools\";\nimport {\n  generateRandomNumber,\n  calculateNumberB,\n  calculateNumberS,\n  deriveKey,\n  deriveKeyPythonCompatible\n} from \"./numberTools\";\nimport { getKeys, sendKeyB, getMessage, compareKeys, sendMessage } from \"./requests/requestExchangeKey\";\nimport { Registration } from \"./components/Registration/Registration\";\nimport { MainWindow } from \"./components/MainWindow/MainWindow\";\n\nfunction App() {\n  const [b, setb] = useState(generateRandomNumber());\n  const [B, setB] = useState(null);\n  const [S, setS] = useState(null);\n  const [derivedKey, setDerivedKey] = useState(undefined);\n  const [decryptedMessage, setDecryptedMessage] = useState(null);\n\n  // Получение ключей от сервера при монтировании компонента\n  useEffect(() => {\n    const fetchData = async () => {\n      console.log(`сгенерированное число b: ${b}`);\n\n      const keys = await getKeys(); // Получение данных с сервера\n      console.log(`Полученное число A: ${keys.key_A}`);\n      \n      const B_loc = calculateNumberB(keys.key_g, b, keys.key_p);\n      setB(B_loc);\n      console.log(`Число B: ${B_loc}`);\n\n      sendKeyB(B_loc);\n\n      const S_local = calculateNumberS(keys.key_A, b, keys.key_p);\n      setS(S_local);\n      console.log(`S: ${S_local}`)\n\n      function uint8ArrayToHex(uint8Array) {\n        return Array.from(uint8Array)\n            .map(byte => byte.toString(16).padStart(2, '0')) // Преобразуем каждый байт в шестнадцатеричное значение\n            .join(''); // Соединяем их в строку\n    }    \n\n      const derivedKey = await deriveKey(S_local); // Генерация ключа\n      setDerivedKey(derivedKey);\n      console.log(`derivedKey: ${uint8ArrayToHex(derivedKey)}`)\n\n      await compareKeys(derivedKey)\n      const data = await getMessage();\n      console.log(`iv: ${data.iv}`)\n      console.log(`iv: ${typeof data.iv}`)\n\n      console.log(`encrypted_message: ${data.encrypted_message}`)\n      console.log(`encrypted_message: ${typeof data.encrypted_message}`)\n\n      const decryptedMessage = decryptMessage(data.iv, data.encrypted_message, derivedKey)\n      console.log(decryptedMessage)\n\n\n      const dataForChipher = {'one': 'hello', 'two': [32, 28]}\n      const dataIvAndMessage = encryptMessage(derivedKey, dataForChipher)\n      console.log(`iv: ${dataIvAndMessage.iv}`)\n      console.log(`mes: ${dataIvAndMessage.encryptedMessage}`)\n\n      sendMessage(dataIvAndMessage.iv, dataIvAndMessage.encryptedMessage);\n\n  };\n\n  fetchData();\n\n  }, []);\n\n  return (\n    // <Registration sharedKey={derivedKey}></Registration>\n\n    // <MainWindow sharedKey={derivedKey}></MainWindow>\n    <Router>\n        <Routes>\n            {/* Маршрут для начального компонента */}\n            <Route path=\"/\" element={<Registration sharedKey={derivedKey}></Registration>} />\n\n            {/* Маршрут для целевого компонента */}\n            <Route path=\"/working\" element={<MainWindow></MainWindow>} />\n        </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}