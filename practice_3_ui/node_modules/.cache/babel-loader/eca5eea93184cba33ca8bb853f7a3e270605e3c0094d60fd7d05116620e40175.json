{"ast":null,"code":"import crypto from 'crypto';\n\n// Генерация параметров Diffie-Hellman (используем те же параметры, что и на сервере)\nexport function generateDhParameters() {\n  const dh = crypto.createDiffieHellman(2048); // Генерация параметров с размером ключа 2048 бит\n  const publicKey = dh.generateKeys();\n  return {\n    dh,\n    publicKey\n  };\n}\n\n// Вычисление общего ключа на основе публичных ключей\nexport function computeSharedKey(dh, clientPublicKeyBuffer) {\n  const sharedKey = dh.computeSecret(clientPublicKeyBuffer);\n  return sharedKey;\n}","map":{"version":3,"names":["crypto","generateDhParameters","dh","createDiffieHellman","publicKey","generateKeys","computeSharedKey","clientPublicKeyBuffer","sharedKey","computeSecret"],"sources":["D:/учеба/3 курс/1 семестр/ИнфоБез/pracitce_3/practice_3_ui/src/diffieUtils.js"],"sourcesContent":["import crypto from 'crypto';\r\n\r\n// Генерация параметров Diffie-Hellman (используем те же параметры, что и на сервере)\r\nexport function generateDhParameters() {\r\n  const dh = crypto.createDiffieHellman(2048);  // Генерация параметров с размером ключа 2048 бит\r\n  const publicKey = dh.generateKeys();\r\n  return { dh, publicKey };\r\n}\r\n\r\n// Вычисление общего ключа на основе публичных ключей\r\nexport function computeSharedKey(dh, clientPublicKeyBuffer) {\r\n  const sharedKey = dh.computeSecret(clientPublicKeyBuffer);\r\n  return sharedKey;\r\n}\r\n"],"mappings":"AAAA,OAAOA,MAAM,MAAM,QAAQ;;AAE3B;AACA,OAAO,SAASC,oBAAoBA,CAAA,EAAG;EACrC,MAAMC,EAAE,GAAGF,MAAM,CAACG,mBAAmB,CAAC,IAAI,CAAC,CAAC,CAAE;EAC9C,MAAMC,SAAS,GAAGF,EAAE,CAACG,YAAY,CAAC,CAAC;EACnC,OAAO;IAAEH,EAAE;IAAEE;EAAU,CAAC;AAC1B;;AAEA;AACA,OAAO,SAASE,gBAAgBA,CAACJ,EAAE,EAAEK,qBAAqB,EAAE;EAC1D,MAAMC,SAAS,GAAGN,EAAE,CAACO,aAAa,CAACF,qBAAqB,CAAC;EACzD,OAAOC,SAAS;AAClB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}