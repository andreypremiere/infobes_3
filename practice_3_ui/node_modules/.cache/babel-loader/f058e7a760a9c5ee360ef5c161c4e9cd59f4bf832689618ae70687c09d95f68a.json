{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0443\\u0447\\u0435\\u0431\\u0430\\\\3 \\u043A\\u0443\\u0440\\u0441\\\\1 \\u0441\\u0435\\u043C\\u0435\\u0441\\u0442\\u0440\\\\\\u0418\\u043D\\u0444\\u043E\\u0411\\u0435\\u0437\\\\pracitce_3\\\\practice_3_ui\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport { decryptMessage, encryptMessage } from \"./cryptoTools\";\nimport { generateRandomNumber, calculateNumberB, calculateNumberS, deriveKey } from \"./numberTools\";\nimport { getKeys, sendKeyB, getMessage } from \"./requests/requestExchangeKey\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [b, setb] = useState(generateRandomNumber());\n  const [B, setB] = useState(null);\n  const [S, setS] = useState(null);\n  const [derivedKey, setDerivedKey] = useState(undefined);\n  const [decryptedMessage, setDecryptedMessage] = useState(null);\n\n  // Получение ключей от сервера при монтировании компонента\n  useEffect(() => {\n    async function exchangeKeys() {\n      try {\n        const keys = await getKeys(); // Получение g, A, p от сервера\n        console.log(\"Полученные ключи:\", keys);\n        const B_local = calculateNumberB(keys.g, b, keys.p); // Вычисление B\n        setB(B_local);\n        sendKeyB(B_local); // Отправка B серверу\n\n        const S_local = calculateNumberS(keys.key_A, b, keys.kep); // Вычисление S\n        setS(S_local);\n        const derivedKey = await deriveKey(S_local); // Генерация ключа\n        setDerivedKey(derivedKey);\n        const dataMessage = await getMessage(); // Получение зашифрованного сообщения\n        const decrypted = decryptMessage(dataMessage.iv, dataMessage.encrypted_message, derivedKey);\n        setDecryptedMessage(decrypted);\n      } catch (error) {\n        console.error(\"Ошибка обмена ключами:\", error);\n      }\n    }\n    exchangeKeys();\n  }, [b]);\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"React + Diffie-Hellman\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"b: \", b.toString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"B: \", B ? B.toString() : \"Загрузка...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"S: \", S ? S.toString() : \"Загрузка...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u041A\\u043B\\u044E\\u0447: \", derivedKey ? derivedKey.toString() : \"Загрузка...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u0421\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435: \", decryptedMessage || \"Загрузка...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"9/JgS5AhCkCkfO8pMo6RpXqVc4g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","BrowserRouter","Routes","Route","decryptMessage","encryptMessage","generateRandomNumber","calculateNumberB","calculateNumberS","deriveKey","getKeys","sendKeyB","getMessage","jsxDEV","_jsxDEV","App","_s","b","setb","B","setB","S","setS","derivedKey","setDerivedKey","undefined","decryptedMessage","setDecryptedMessage","exchangeKeys","keys","console","log","B_local","g","p","S_local","key_A","kep","dataMessage","decrypted","iv","encrypted_message","error","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","toString","_c","$RefreshReg$"],"sources":["D:/учеба/3 курс/1 семестр/ИнфоБез/pracitce_3/practice_3_ui/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport { decryptMessage, encryptMessage } from \"./cryptoTools\";\nimport {\n  generateRandomNumber,\n  calculateNumberB,\n  calculateNumberS,\n  deriveKey,\n} from \"./numberTools\";\nimport { getKeys, sendKeyB, getMessage } from \"./requests/requestExchangeKey\";\n\nfunction App() {\n  const [b, setb] = useState(generateRandomNumber());\n  const [B, setB] = useState(null);\n  const [S, setS] = useState(null);\n  const [derivedKey, setDerivedKey] = useState(undefined);\n  const [decryptedMessage, setDecryptedMessage] = useState(null);\n\n  // Получение ключей от сервера при монтировании компонента\n  useEffect(() => {\n    async function exchangeKeys() {\n      try {\n        const keys = await getKeys(); // Получение g, A, p от сервера\n        console.log(\"Полученные ключи:\", keys);\n\n        const B_local = calculateNumberB(keys.g, b, keys.p); // Вычисление B\n        setB(B_local);\n        sendKeyB(B_local); // Отправка B серверу\n\n        const S_local = calculateNumberS(keys.key_A, b, keys.kep); // Вычисление S\n        setS(S_local);\n\n        const derivedKey = await deriveKey(S_local); // Генерация ключа\n        setDerivedKey(derivedKey);\n\n        const dataMessage = await getMessage(); // Получение зашифрованного сообщения\n        const decrypted = decryptMessage(\n          dataMessage.iv,\n          dataMessage.encrypted_message,\n          derivedKey\n        );\n        setDecryptedMessage(decrypted);\n      } catch (error) {\n        console.error(\"Ошибка обмена ключами:\", error);\n      }\n    }\n\n    exchangeKeys();\n  }, [b]);\n\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route\n          path=\"/\"\n          element={\n            <div>\n              <h1>React + Diffie-Hellman</h1>\n              <p>b: {b.toString()}</p>\n              <p>B: {B ? B.toString() : \"Загрузка...\"}</p>\n              <p>S: {S ? S.toString() : \"Загрузка...\"}</p>\n              <p>Ключ: {derivedKey ? derivedKey.toString() : \"Загрузка...\"}</p>\n              <p>Сообщение: {decryptedMessage || \"Загрузка...\"}</p>\n            </div>\n          }\n        />\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}