{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0443\\u0447\\u0435\\u0431\\u0430\\\\3 \\u043A\\u0443\\u0440\\u0441\\\\1 \\u0441\\u0435\\u043C\\u0435\\u0441\\u0442\\u0440\\\\\\u0418\\u043D\\u0444\\u043E\\u0411\\u0435\\u0437\\\\pracitce_3\\\\practice_3_ui\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n/* global BigInt */\n\nimport React, { useEffect, useState } from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport { decryptMessage, encryptMessage } from \"./cryptoTools\";\nimport { generateRandomNumber, calculateNumberB, calculateNumberS, deriveKey } from \"./numberTools\";\nimport { getKeys, sendKeyB, getMessage, compareKeys } from \"./requests/requestExchangeKey\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [b, setb] = useState(generateRandomNumber());\n  const [B, setB] = useState(null);\n  const [S, setS] = useState(null);\n  const [derivedKey, setDerivedKey] = useState(undefined);\n  const [decryptedMessage, setDecryptedMessage] = useState(null);\n\n  // Получение ключей от сервера при монтировании компонента\n  useEffect(() => {\n    const fetchData = async () => {\n      console.log(`сгенерированное число b: ${b}`);\n      const keys = await getKeys(); // Получение данных с сервера\n      console.log(`Полученное число A: ${keys.key_A}`);\n      const B_loc = calculateNumberB(keys.key_g, b, keys.key_p);\n      setB(B_loc);\n      console.log(`Число B: ${B_loc}`);\n      sendKeyB(B_loc);\n      const S_local = calculateNumberS(keys.key_A, b, keys.key_p);\n      setS(S_local);\n      console.log(`S: ${S_local}`);\n      const derivedKey = await deriveKey(S_local); // Генерация ключа\n      setDerivedKey(derivedKey);\n      console.log(`derivedKey: ${derivedKey}`);\n\n      // await compareKeys(derivedKey)\n      const data = await getMessage();\n      console.log(`iv: ${data.iv}`);\n      console.log(`iv: ${typeof data.iv}`);\n      console.log(`encrypted_message: ${data.encrypted_message}`);\n      console.log(`encrypted_message: ${typeof data.encrypted_message}`);\n      const decryptedMessage = decryptMessage(data.iv, data.encrypted_message, derivedKey);\n      console.log(decryptedMessage);\n      const dataForChipher = {\n        'one': 'hello'\n      };\n    };\n    fetchData();\n    // try {\n\n    //   console.log(`Запрос getKeys...`);\n\n    //   const keys = await getKeys(); // Получение g, A, p от сервера\n    //   console.log(`Запрос getKeys закончен`);\n\n    //   console.log(\"Полученные ключи:\", keys);\n    //   console.log(`Число g: ${keys.key_g}`);\n    //   console.log(`Число p: ${keys.key_p}`);\n    //   console.log(`Число A: ${keys.key_A}`);\n\n    //   console.log(`Началась функция calculateNumberB`)\n    //   const B_local = calculateNumberB(keys.key_g, b, keys.key_p); // Вычисление B\n    //   console.log(`Закончилась функция calculateNumberB`)\n    //   setB(B_local);\n    //   console.log(`Полученный результат B: ${B}`)\n    //   console.log(`Отправка результата начата sendKeyB`)\n    //   sendKeyB(B_local); // Отправка B серверу\n\n    //   console.log(`Расчет calculateNumberS начался`)\n    //   const S_local = calculateNumberS(keys.key_A, b, keys.key_p); // Вычисление S\n    //   setS(S_local);\n    //   console.log(`Расчет calculateNumberS закончился`)\n    //   console.log(`S: ${S}`)\n\n    //   console.log(`Расчет deriveKey начался`)\n    //   const derivedKey = await deriveKey(S_local); // Генерация ключа\n    //   console.log(`Расчет deriveKey закончился`)\n    //   setDerivedKey(derivedKey);\n    //   console.log(`derivedKey: ${derivedKey}`)\n\n    //   console.log(`Получение соообщения getMessage началось`)\n    //   const dataMessage = await getMessage(); // Получение зашифрованного сообщения\n    //   const decrypted = decryptMessage(\n    //     dataMessage.iv,\n    //     dataMessage.encrypted_message,\n    //     derivedKey\n    //   );\n\n    //   console.log(`Получение соообщения getMessage закончилось`)\n    //   console.log(`decrypted: ${decrypted}`)\n\n    //   setDecryptedMessage(decrypted);\n    // } catch (error) {\n    //   console.error(\"Ошибка обмена ключами:\", error);\n    // }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"React + Diffie-Hellman\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"b: \", b.toString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"B: \", B ? B.toString() : \"Загрузка...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"S: \", S ? S.toString() : \"Загрузка...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u041A\\u043B\\u044E\\u0447: \", derivedKey ? derivedKey.toString() : \"Загрузка...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u0421\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435: \", decryptedMessage || \"Загрузка...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"9/JgS5AhCkCkfO8pMo6RpXqVc4g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","BrowserRouter","Routes","Route","decryptMessage","encryptMessage","generateRandomNumber","calculateNumberB","calculateNumberS","deriveKey","getKeys","sendKeyB","getMessage","compareKeys","jsxDEV","_jsxDEV","App","_s","b","setb","B","setB","S","setS","derivedKey","setDerivedKey","undefined","decryptedMessage","setDecryptedMessage","fetchData","console","log","keys","key_A","B_loc","key_g","key_p","S_local","data","iv","encrypted_message","dataForChipher","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","toString","_c","$RefreshReg$"],"sources":["D:/учеба/3 курс/1 семестр/ИнфоБез/pracitce_3/practice_3_ui/src/App.js"],"sourcesContent":["/* global BigInt */\n\n\nimport React, { useEffect, useState } from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport { decryptMessage, encryptMessage } from \"./cryptoTools\";\nimport {\n  generateRandomNumber,\n  calculateNumberB,\n  calculateNumberS,\n  deriveKey,\n} from \"./numberTools\";\nimport { getKeys, sendKeyB, getMessage, compareKeys } from \"./requests/requestExchangeKey\";\n\nfunction App() {\n  const [b, setb] = useState(generateRandomNumber());\n  const [B, setB] = useState(null);\n  const [S, setS] = useState(null);\n  const [derivedKey, setDerivedKey] = useState(undefined);\n  const [decryptedMessage, setDecryptedMessage] = useState(null);\n\n  // Получение ключей от сервера при монтировании компонента\n  useEffect(() => {\n    const fetchData = async () => {\n      console.log(`сгенерированное число b: ${b}`);\n\n      const keys = await getKeys(); // Получение данных с сервера\n      console.log(`Полученное число A: ${keys.key_A}`);\n      \n      const B_loc = calculateNumberB(keys.key_g, b, keys.key_p);\n      setB(B_loc);\n      console.log(`Число B: ${B_loc}`);\n\n      sendKeyB(B_loc);\n\n      const S_local = calculateNumberS(keys.key_A, b, keys.key_p);\n      setS(S_local);\n      console.log(`S: ${S_local}`)\n\n      const derivedKey = await deriveKey(S_local); // Генерация ключа\n      setDerivedKey(derivedKey);\n      console.log(`derivedKey: ${derivedKey}`)\n\n      // await compareKeys(derivedKey)\n      const data = await getMessage();\n      console.log(`iv: ${data.iv}`)\n      console.log(`iv: ${typeof data.iv}`)\n\n      console.log(`encrypted_message: ${data.encrypted_message}`)\n      console.log(`encrypted_message: ${typeof data.encrypted_message}`)\n\n      const decryptedMessage = decryptMessage(data.iv, data.encrypted_message, derivedKey)\n      console.log(decryptedMessage)\n\n\n      const dataForChipher = {'one': 'hello', }\n\n  };\n\n  fetchData();\n    // try {\n\n    //   console.log(`Запрос getKeys...`);\n\n    //   const keys = await getKeys(); // Получение g, A, p от сервера\n    //   console.log(`Запрос getKeys закончен`);\n\n    //   console.log(\"Полученные ключи:\", keys);\n    //   console.log(`Число g: ${keys.key_g}`);\n    //   console.log(`Число p: ${keys.key_p}`);\n    //   console.log(`Число A: ${keys.key_A}`);\n\n\n    //   console.log(`Началась функция calculateNumberB`)\n    //   const B_local = calculateNumberB(keys.key_g, b, keys.key_p); // Вычисление B\n    //   console.log(`Закончилась функция calculateNumberB`)\n    //   setB(B_local);\n    //   console.log(`Полученный результат B: ${B}`)\n    //   console.log(`Отправка результата начата sendKeyB`)\n    //   sendKeyB(B_local); // Отправка B серверу\n\n    //   console.log(`Расчет calculateNumberS начался`)\n    //   const S_local = calculateNumberS(keys.key_A, b, keys.key_p); // Вычисление S\n    //   setS(S_local);\n    //   console.log(`Расчет calculateNumberS закончился`)\n    //   console.log(`S: ${S}`)\n\n    //   console.log(`Расчет deriveKey начался`)\n    //   const derivedKey = await deriveKey(S_local); // Генерация ключа\n    //   console.log(`Расчет deriveKey закончился`)\n    //   setDerivedKey(derivedKey);\n    //   console.log(`derivedKey: ${derivedKey}`)\n\n    //   console.log(`Получение соообщения getMessage началось`)\n    //   const dataMessage = await getMessage(); // Получение зашифрованного сообщения\n    //   const decrypted = decryptMessage(\n    //     dataMessage.iv,\n    //     dataMessage.encrypted_message,\n    //     derivedKey\n    //   );\n\n    //   console.log(`Получение соообщения getMessage закончилось`)\n    //   console.log(`decrypted: ${decrypted}`)\n\n    //   setDecryptedMessage(decrypted);\n    // } catch (error) {\n    //   console.error(\"Ошибка обмена ключами:\", error);\n    // }\n\n  }, []);\n\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route\n          path=\"/\"\n          element={\n            <div>\n              <h1>React + Diffie-Hellman</h1>\n              <p>b: {b.toString()}</p>\n              <p>B: {B ? B.toString() : \"Загрузка...\"}</p>\n              <p>S: {S ? S.toString() : \"Загрузка...\"}</p>\n              <p>Ключ: {derivedKey ? derivedKey.toString() : \"Загрузка...\"}</p>\n              <p>Сообщение: {decryptedMessage || \"Загрузка...\"}</p>\n            </div>\n          }\n        />\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}