{"ast":null,"code":"export async function getKeys() {\n  try {\n    const response = await fetch('http://localhost:5000/get_keys', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    if (!response.ok) {\n      throw new Error(`Ошибка: ${response.status} ${response.statusText}`);\n    }\n    const data = await response.json();\n    console.log('Полученные ключи:', data);\n    return data;\n  } catch (error) {\n    console.error('Ошибка при получении ключей:', error);\n    return null;\n  }\n}\nexport async function sendKeyB(key_B) {\n  try {\n    const response = await fetch('http://localhost:5000/get_key_B', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        key_B: key_B\n      })\n    });\n    if (!response.ok) {\n      throw new Error(`Ошибка: ${response.status} ${response.statusText}`);\n    }\n    const data = await response.text();\n    console.log('Ответ от сервера:', data);\n    return data;\n  } catch (error) {\n    console.error('Ошибка при отправке ключа B:', error);\n    return null;\n  }\n}\nexport async function getMessage() {\n  try {\n    const response = await fetch('http://localhost:5000', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    if (!response.ok) {\n      throw new Error(`Ошибка: ${response.status} ${response.statusText}`);\n    }\n    const data = await response.json();\n    console.log('Полученные ключи:', data);\n    return data;\n  } catch (error) {\n    console.error('Ошибка при получении ключей:', error);\n    return null;\n  }\n}","map":{"version":3,"names":["getKeys","response","fetch","method","headers","ok","Error","status","statusText","data","json","console","log","error","sendKeyB","key_B","body","JSON","stringify","text","getMessage"],"sources":["D:/учеба/3 курс/1 семестр/ИнфоБез/pracitce_3/practice_3_ui/src/requests/requestExchangeKey.js"],"sourcesContent":["export async function getKeys() {\r\n    try {\r\n        const response = await fetch('http://localhost:5000/get_keys', {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        });\r\n\r\n        if (!response.ok) {\r\n            throw new Error(`Ошибка: ${response.status} ${response.statusText}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n        console.log('Полученные ключи:', data);\r\n        return data;\r\n    } catch (error) {\r\n        console.error('Ошибка при получении ключей:', error);\r\n        return null;\r\n    }\r\n}\r\n\r\nexport async function sendKeyB(key_B) {\r\n    try {\r\n        const response = await fetch('http://localhost:5000/get_key_B', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ key_B: key_B }),\r\n        });\r\n\r\n        if (!response.ok) {\r\n            throw new Error(`Ошибка: ${response.status} ${response.statusText}`);\r\n        }\r\n\r\n        const data = await response.text();\r\n        console.log('Ответ от сервера:', data);\r\n        return data;\r\n    } catch (error) {\r\n        console.error('Ошибка при отправке ключа B:', error);\r\n        return null;\r\n    }\r\n}\r\n\r\nexport async function getMessage() {\r\n    try {\r\n        const response = await fetch('http://localhost:5000', {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        });\r\n\r\n        if (!response.ok) {\r\n            throw new Error(`Ошибка: ${response.status} ${response.statusText}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n        console.log('Полученные ключи:', data);\r\n        return data;\r\n    } catch (error) {\r\n        console.error('Ошибка при получении ключей:', error);\r\n        return null;\r\n    }\r\n}"],"mappings":"AAAA,OAAO,eAAeA,OAAOA,CAAA,EAAG;EAC5B,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;MAC3DC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC;IAEF,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,WAAWL,QAAQ,CAACM,MAAM,IAAIN,QAAQ,CAACO,UAAU,EAAE,CAAC;IACxE;IAEA,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;IAClCC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEH,IAAI,CAAC;IACtC,OAAOA,IAAI;EACf,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZF,OAAO,CAACE,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,OAAO,IAAI;EACf;AACJ;AAEA,OAAO,eAAeC,QAAQA,CAACC,KAAK,EAAE;EAClC,IAAI;IACA,MAAMd,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;MAC5DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDY,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEH,KAAK,EAAEA;MAAM,CAAC;IACzC,CAAC,CAAC;IAEF,IAAI,CAACd,QAAQ,CAACI,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,WAAWL,QAAQ,CAACM,MAAM,IAAIN,QAAQ,CAACO,UAAU,EAAE,CAAC;IACxE;IAEA,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACkB,IAAI,CAAC,CAAC;IAClCR,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEH,IAAI,CAAC;IACtC,OAAOA,IAAI;EACf,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZF,OAAO,CAACE,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,OAAO,IAAI;EACf;AACJ;AAEA,OAAO,eAAeO,UAAUA,CAAA,EAAG;EAC/B,IAAI;IACA,MAAMnB,QAAQ,GAAG,MAAMC,KAAK,CAAC,uBAAuB,EAAE;MAClDC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC;IAEF,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,WAAWL,QAAQ,CAACM,MAAM,IAAIN,QAAQ,CAACO,UAAU,EAAE,CAAC;IACxE;IAEA,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;IAClCC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEH,IAAI,CAAC;IACtC,OAAOA,IAAI;EACf,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZF,OAAO,CAACE,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,OAAO,IAAI;EACf;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}